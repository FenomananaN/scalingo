openapi: 3.0.0
info:
  title: 'Manavola Api'
  version: '0.1'
servers:
  -
    url: 'http://manavolabackend-env.eba-sweq2qp9.us-east-2.elasticbeanstalk.com'
    description: 'Manavola backend'
paths:
  /ping:
    get:
      operationId: f9bfe2253c64e12e1700fb157589eb52
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
  /register:
    post:
      tags:
        - Register
      description: 'register a new user'
      operationId: 023bf4410e083690ec4c5e3227c07e2d
      requestBody:
        request: 'create new user'
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
                - username
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                username:
                  type: string
                parrainerId:
                  type: string
              type: object
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  user_id: { type: integer }
                  email: { type: string, format: email }
                  username: { type: string }
                  parrainageId: { type: string }
                type: object
  /registerverification:
    post:
      tags:
        - Register
      description: 'to make the user verified'
      operationId: acad9a7252c5a1e55f1a6c295e62a391
      requestBody:
        request: 'register verification'
        description: 'data to enter for making the user verified'
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - rectophoto
                - versoPhoto
                - selfieAvecCIN
              properties:
                rectophoto:
                  type: file
                  format: binary
                versoPhoto:
                  type: file
                  format: binary
                selfieAvecCIN:
                  type: file
                  format: binary
              type: object
          application/json:
            schema:
              required:
                - numeroCIN
                - fullname
              properties:
                numeroCIN:
                  type: string
                email:
                  type: string
                  format: email
                fullname:
                  type: string
              type: object
      responses:
        '201':
          description: Created
  /user:
    get:
      tags:
        - User
      description: 'get user logged info'
      operationId: 2e683412b8ffee39f182f29c6aed7115
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer }
                  email: { type: string, format: email }
                  username: { type: string }
                  fullname: { type: string }
                  telma: { type: string }
                  orange: { type: string }
                  airtel: { type: string }
                  createdAt: { type: string, format: date-time }
                  isVerified: { type: boolean }
                  parrainageId: { type: string }
                type: object
  /newWallet:
    post:
      tags:
        - Wallet
      description: 'to create a new wallet'
      operationId: 0770496db5b2dcabfe1f91ddd4b14aaf
      requestBody:
        request: 'new Wallet'
        description: 'to create a new Wallet'
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - logo
              properties:
                logo:
                  type: file
                  format: binary
              type: object
          application/json:
            schema:
              required:
                - walletName
                - currency
              properties:
                walletName:
                  type: string
                reserve:
                  type: string
                currency:
                  type: string
              type: object
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  wallet_id: { type: integer }
                  wallet_name: { type: string }
                  currency: { type: string }
                  wallet_logo: { type: string }
                type: object
  /newGasyWallet:
    post:
      tags:
        - Wallet
      description: 'to create a new gasy wallet'
      operationId: ec751fd41ebd849439756d4547771671
      requestBody:
        request: 'new gasy Wallet'
        description: 'to create a new gasy Wallet'
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - logo
              properties:
                logo:
                  type: file
                  format: binary
              type: object
          application/json:
            schema:
              required:
                - gasyWalletName
              properties:
                gasyWalletName:
                  type: string
                reserve:
                  type: string
              type: object
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  gasyWallet_id: { type: integer }
                  gasyWallet_name: { type: string }
                  gasyWallet_logo: { type: string }
                type: object
  /modifyWallet:
    post:
      tags:
        - Wallet
      description: 'to modify the current'
      operationId: c53606b200f9c3e2cd9c9338a5d52266
      requestBody:
        request: 'modify the current Wallet'
        description: 'to modify the current a new Wallet'
        required: false
        content:
          multipart/form-data:
            schema:
              properties:
                logo:
                  type: file
                  format: binary
              type: object
          application/json:
            schema:
              required:
                - id
              properties:
                id:
                  type: integer
                walletName:
                  type: string
                reserve:
                  type: string
                currency:
                  type: string
              type: object
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  wallet_id: { type: integer }
                  wallet_name: { type: string }
                  currency: { type: string }
                  wallet_logo: { type: string }
                type: object
  /getAllWallet:
    get:
      tags:
        - Wallet
      description: 'get all wallet'
      operationId: 54d4843635a5282cea224115297d8f7c
      responses:
        '200':
          description: 'data received when in success'
          content:
            application/json:
              schema:
                properties:
                  wallet: { type: array, items: { $ref: { schema: h, required: [id], properties: { id: { type: integer }, walletName: { type: string }, reserve: { type: string }, currency: { type: string } }, type: object } } }
                type: object
components:
  schemas:
    h:
      required:
        - id
      properties:
        id:
          type: integer
        walletName:
          type: string
        reserve:
          type: string
        currency:
          type: string
      type: object
    User:
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        username:
          type: string
        roles:
          type: string
        telma:
          type: string
          nullable: true
        orange:
          type: string
          nullable: true
        airtel:
          type: string
          nullable: true
        verifiedStatus:
          type: boolean
        fidelityPt:
          type: integer
        createdAt:
          type: string
          format: date-time
      type: object
